do local _ENV=_ENV or _G;local a=_ENV.getmetatable;local b=_ENV.setmetatable;local c=_ENV.tonumber;local d=_ENV.error;local e=_ENV.ipairs;local f=_ENV.next;local g=_ENV.type;local h=table.insert;local i=table.remove;local j=tfm.exec.addImage;local k=tfm.exec.removeImage;local l=ui.addTextArea;local m=ui.removeTextArea;local n=ui.updateTextArea;local function o(target,...)for p,q in e{...}do if g(q)=='table'then for r,s in f,q do target[r]=s end end end;return target end;local function t(u,v)for p,w in e(v)do if u==w then return p end end end;local function x()return{meta={}}end;local function y(z)return b({},z.meta)end;local function A(z,B)local C=a(z)or{}C.__call=B;b(z,C)end;local function D(z,E)z.meta.__index=E end;local function F(z,u)return a(u)==z.meta end;local G,H;local I;local J;local K;local L;local M;local N;local O;local P=0;function I(obj,target)obj=J(obj)obj.target=target;return obj end;function J(obj)local Q=o({},obj)local R=obj.children;if g(R)=='table'then local S={}for p,T in e(R)do local U=J(T)S[p]=U;U.parent=Q end;Q.children=S end;Q.origin=obj;return b(Q,a(obj))end;function K(obj)while true do local E=obj.parent;if not E then return obj end;obj=E end end;local function V(W,X,Y,Z,_,a0,alpha,fixed,a1)l(id,obj.html or'',target,W,X,Y,Z,_,border,alpha,fixed)end;function L(obj)if obj.display==false and not obj._removed then return obj end;local target=O or K(obj).target;if F(G,obj)then local a2=not M;M=M or 1;if obj._removed then k(obj._id)return obj end;obj._id=j(obj.id,'&'..M,obj.x,obj.y,target)if a2 then M=nil elseif M<9 then M=M+1 end elseif F(H,obj)then local a3=not N;local a4=obj._removed or N.removed;if a4 then m(obj._id,target)local border=obj._border;if border then for id in f,border do m(id,target)end;obj._border=nil end else local W=c(obj.x)or 0;local X=c(obj.y)or 0;local Y=c(obj.width)or 0;local Z=c(obj.height)or 0;Y=Y<10 and 10 or Y;Z=Z<10 and 10 or Z;local alpha=obj.alpha;local fixed=obj.fixed;if N and obj.inherit~=false then alpha=alpha or N.alpha;fixed=fixed or N.fixed end;fixed=fixed==nil or fixed;local _=c(obj.background)or 0x324650;local border=obj.border;W=W-Y/2;X=X-Z/2;if g(border)=='table'then W=W+2;X=X+2;Y=Y-4;Z=Z-4;local a5={}local a6=border[1]or 0;if a6>0 then local a7=a6<3;local a8,a9;if a7 then a8=a6==2 and 1 or 2;a9=a8*2;a6=3;W=W+a8;X=X+a8;Y=Y-a9;Z=Z-a9 end;local aa,ab,ac,ad;if#border==3 then aa=c(border[2])or 1;aa=aa<1 and 1 or aa;ac=c(border[3])or aa;ac=ac<1 and 1 or ac;ab=aa;ad=ac else aa=c(border[2])or 1;aa=aa<1 and 1 or aa;ab=c(border[3])or aa;ab=ab<1 and 1 or ab;ac=c(border[4])or ab;ac=ac<1 and 1 or ac;ad=c(border[5])or ab;ad=ad<1 and 1 or ad end;local ae={aa,ab,ac,ad}for p=1,4 do local a0=ae[p]local af,ag,ah,ai;if p%2==1 then ah=a6;ai=Z+a6*2;af=p==1 and W-ah or W+Y;ag=X-a6 else ah=Y+a6*2;ai=a6;af=W-a6;ag=p==2 and X-ai or X+Z end;l(P,'',target,af,ag,ah,ai,a0,a0,alpha,fixed)a5[P]=true;P=P+1 end;if a7 then W=W-a8;X=X-a8;Y=Y+a9;Z=Z+a9 end end;border=_;obj._border=a5 else border=c(border)or 1 end;local id=obj._id;if not id then id=P;obj._id=id;P=P+1 end;l(id,obj.html or'',target,W,X,Y,Z,_,border,alpha,fixed)end;N=obj;local R=obj.children;if g(R)=='table'then local aj=not O;O=target;local ak={}local al=0;for p,T in e(R)do al=al+1;local am=c(T.z)or al;am=am>al and al or am<1 and 1 or am;h(ak,am,T)end;for p,T in e(ak)do L(T,fixed,alpha,a4)end;if aj then O=nil end end;if a3 then N=nil end end;return obj end;local function an(ao)if not F(H,ao)then return ao end;local ap=not O;O=O or K(ao).target;n(ao._id,ao.html or'',O)local R=ao.children;if R then for p,T in e(R)do an(T)end end;return ao end;local function aq(obj)obj._removed=true;return obj end;local ar={'id','x','y'}G=x()A(G,function(G,...)local self=y(G)for p,as in e{...}do local at=ar[p]if not at or g(as)=='table'then o(self,as)else self[at]=as end end;return self end)D(G,{build=I,clone=J,remove=aq,top=K,update=L})local ar={'x','y','width','height'}H=x()A(H,function(H,...)local self=y(H)for p,as in e{...}do local at=ar[p]if not at or g(as)=='table'then o(self,as)else self[at]=as end end;return self end)local function au(obj,av)local R=obj.children;if R then for p,T in e(obj.children)do if T.origin==av then return T end;local aw=au(T,av)if aw then return aw end end end end;local function ax(obj,...)local R=obj.children;if R then for ay,target in e{...}do for p,T in e(R)do if T==target then i(target,p)break else ax(T,target)end end end;if#R==0 then obj.children=nil end end;return obj end;D(H,{addChild=function(self,...)local R=self.children or{}self.children=R;for p,az in e{...}do R[#R+1]=az end;return self end,build=I,clone=J,findCloneOf=au,remove=aq,removeChild=ax,top=K,update=L,updateHTML=an})txshop={Image=G,TextArea=H}end
