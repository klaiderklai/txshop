do local a=_ENV or _G;local b=a.error;local c=a.type;local d=a.rawget;local e=a.getmetatable;local f=a.setmetatable;local g;local function h(i)local j=d(i,'IMeta')if c(j)~='table'then j={}i.IMeta=j end;return j end;local function k(i)local l=e(i)if not l then l={__call=g}f(i,l)end;return l end;local function m(i)return f({},h(i))end;local function n(i)i=e(i)return i and i.__call end;local function o(i)i=e(i)return i and i.__index end;local function p(i)local j=d(i,'IMeta')if c(j)=='table'then return j.__index end end;local function q(r,i)r=e(r)i=d(i,'IMeta')if c(i)~='table'then return false end;while c(r)=='table'do if i==r then return true end;r=e(r.__index)end;return false end;local function s(i,t)k(i).__call=t end;local function u(i,v)k(i).__index=v;local w=d(i,'IMeta')if c(w)=='table'then local x=w.__index;if c(x)=='table'then f(x,h(v))end end end;local function y(i,z)h(i).__index=z;local v=o(i)if c(v)=='table'then local A=d(v,'IMeta')if c(A)=='table'then f(z,A)end end end;local function B(i,v,...)local C=e(v)C=C and C.__call;local D=C and v(...)or{}return f(c(D)=='table'and D or{},h(i))end;local function E(i,...)local v=o(i)if c(v)~='table'then b'no super-class to construct'end;return B(i,v,...)end;function g(i,...)local v=o(i)if c(v)=='table'then return B(i,v,...)end;return m(i)end;local F={}function F:createinstance()if c(self)~='table'then b('bad argument #1 to \'createinstance\' (table expected, got '..c(self)..')')end;return m(self)end;function F:getconstructor()if c(self)~='table'then b('bad argument #1 to \'getconstructor\' (table expected, got '..c(self)..')')end;return n(self)end;function F:getparentclass()if c(self)~='table'then b('bad argument #1 to \'getparentclass\' (table expected, got '..c(self)..')')end;return o(self)end;function F:getprototype()if c(self)~='table'then b('bad argument #1 to \'getprototype\' (table expected, got '..c(self)..')')end;return p(self)end;function F.isinstance(r,i)if c(i)~='table'then b('bad argument #2 to \'isinstance\' (table expected, got '..c(i)..')')end;return q(r,i)end;function F:setconstructor(t)if c(self)~='table'then b('bad argument #1 to \'setconstructor\' (table expected, got '..c(self)..')')end;if c(t)~='function'then b('bad argument #2 to \'setconstructor\' (function expected, got '..c(self)..')')end;s(self,t)end;function F:setparentclass(v)if c(self)~='table'then b('bad argument #1 to \'setparentclass\' (table expected, got '..c(self)..')')end;if c(v)~='table'then b('bad argument #2 to \'setparentclass\' (table expected, got '..c(self)..')')end;u(self,v)end;function F:setprototype(z)if c(self)~='table'then b('bad argument #1 to \'setprototype\' (table expected, got '..c(self)..')')end;if c(z)~='table'then b('bad argument #2 to \'setprototype\' (table expected, got '..c(self)..')')end;y(self,z)end;function F:super(...)if c(self)~='table'then b('bad argument #1 to \'super\' (table expected, got '..c(self)..')')end;return E(self,...)end;s(F,function(G,z)local i={}if z~=nil then b('bad argument #1 to \'Class\' (table or nil expected, got '..c(z)..')')end;u(i,F)y(i,c(z)=='table'and z or{})return i end)a.Class=F end
